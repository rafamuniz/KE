@using KarmicEnergy.Web.Areas.Customer.ViewModels.User
@using Munizoft.Extensions

@model CreateViewModel

@{
    Layout = "~/Views/Shared/_Internal.cshtml";
    ViewBag.Title = "User - Create";
}

@using (Html.BeginForm("Create", "User", new { area = "Customer" }, FormMethod.Post, new { id = "formCreateUser", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
            <div class="form-group">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", placeholder = AttributeExtension.GetDisplayAttributeNameValue<CreateViewModel>(m => m.Name) } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                    @Html.EditorFor(m => m.Username, new { htmlAttributes = new { @class = "form-control", placeholder = AttributeExtension.GetDisplayAttributeNameValue<CreateViewModel>(m => m.Username) } })
                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                    @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control", placeholder = AttributeExtension.GetDisplayAttributeNameValue<CreateViewModel>(m => m.Password) } })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                    @Html.EditorFor(m => m.PasswordConfirm, new { htmlAttributes = new { @class = "form-control", placeholder = AttributeExtension.GetDisplayAttributeNameValue<CreateViewModel>(m => m.PasswordConfirm) } })
                    @Html.ValidationMessageFor(m => m.PasswordConfirm, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                    @Html.DropDownListFor(model => model.Role, new SelectList(ViewBag.CustomerRoles, "Id", "Name"), "-- Please select a Role--", new { @class = "form-control selectpicker", id = "ddlRole" })
                    @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model.Sites.Any())
            {
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 box-sub">
                    <div class="title blue">
                        <h2>SITES</h2>
                    </div>

                    <div id="divCheckboxlist" class="checkboxlist">
                        @for (int i = 0; i < Model.Sites.Count; i++)
                        {
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                                    @Html.CheckBoxFor(m => Model.Sites[i].IsSelected, new { id = "chk_" + @Model.Sites[i].Id, style = "vertical-align: 3px;" })
                                    @Html.LabelFor(m => Model.Sites[i].Name, Model.Sites[i].Name, new { @for = "chk_" + @Model.Sites[i].Id })
                                    @Html.HiddenFor(m => Model.Sites[i].Id)
                                    @Html.HiddenFor(m => Model.Sites[i].Name)
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 box-sub">
                <div class="title blue">
                    <h2>INFO</h2>
                </div>
                @Html.Partial("_Address", Model.Address, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "Address" } })
            </div>
        </div>
    </div>

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 btn-submit text-center">
        <input type="submit" class="btn btn-default" value="SAVE">
        <a class="btn" href="/Customer/User">Cancel</a>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}