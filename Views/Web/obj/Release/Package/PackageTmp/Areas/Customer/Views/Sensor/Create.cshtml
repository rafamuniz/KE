@using KarmicEnergy.Web.Areas.Customer.ViewModels.Sensor
@using Munizoft.Extensions
@using Munizoft.MVC.Helpers

@model CreateViewModel

@{
    Layout = "~/Views/Shared/_Internal.cshtml";
    ViewBag.Title = "Sensor - Create";
}

@using (Html.BeginForm("Create", "Sensor", new { area = "Customer" }, FormMethod.Post, new { id = "formCreateTank", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.Partial("_Error")

    <div class="row">
        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xl-6">
            <div class="form-group">
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                    @Html.LabelFor(m => m.TankId, new { @class = "control-label" })
                </div>
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                    @Html.DropDownListFor(m => m.TankId, new SelectList(ViewBag.Tanks, "Id", "Name", Request.QueryString["tankId"]), "-- Please select a Tank --", new { @class = "form-control selectpicker", @id = "ddlTank" })
                    @Html.ValidationMessageFor(m => m.TankId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                    @Html.LabelFor(m => m.SensorTypeId, new { @class = "control-label" })
                </div>
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                    @Html.DropDownListFor(m => m.SensorTypeId, new SelectList(ViewBag.SensorTypes, "Id", "Name"), "-- Please select a Sensor Type --", new { @class = "form-control selectpicker", @id = "ddlSensorType" })
                    @Html.ValidationMessageFor(m => m.SensorTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                    @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                </div>
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                    @Html.LabelFor(m => m.Reference, new { @class = "control-label" })
                </div>
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                    @Html.EditorFor(m => m.Reference, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Reference, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                    @Html.LabelFor(m => m.Status, new { @class = "control-label" })
                </div>
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                    @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.Statuses, "Id", "Name", "A"), "-- Please select a Status--", new { @class = "form-control selectpicker", id = "ddlStatus" })
                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="tankModel" class="col-sm-6 col-md-6 col-xs-6 visible-lg-block">
            @Html.Partial("_TankSpotGPS")
        </div>

    </div>

    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 form-group text-center">
            <input type="submit" class="btn btn-default" value="SAVE">
            <a class="btn" href="/Customer/Sensor/">Cancel</a>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
