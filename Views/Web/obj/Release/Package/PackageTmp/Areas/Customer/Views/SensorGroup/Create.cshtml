@using KarmicEnergy.Web.Areas.Customer.ViewModels.SensorGroup
@using GridMvc.Html
@using Munizoft.MVC.Helpers
@using KarmicEnergy.Web.Extensions

@model GroupViewModel

@{
    Layout = "~/Views/Shared/_Internal.cshtml";
    ViewBag.Title = "Sensor Group - Create";
}

@Styles.Render("~/Content/grid")

@using (Html.BeginForm("Add", "SensorGroup", new { area = "Customer" }, FormMethod.Post, new { id = "formCreateTank", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.GroupId)

    <div class="col-sm-12 col-md-12 col-lg-12 box-sub">
        <div class="title green">
            <h2>Sensor</h2>
        </div>

        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xl-6">
            @if (!this.IsSite())
                {
                <div class="form-group">
                    <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                        @Html.LabelFor(m => m.SiteId, new { @class = "control-label" })
                    </div>
                    <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                        @Html.DropDownListFor(model => model.SiteId, new SelectList(ViewBag.Sites, "Id", "Name"), "-- Please select a Site --", new { @class = "form-control selectpicker", id = "ddlSite", onclick = "GetsTankBySiteId(this.value, 'ddlTank', '/SensorGroup/GetsTankBySiteId');" })
                        @Html.ValidationMessageFor(m => m.SiteId, "", new { @class = "text-danger" })
                    </div>
                </div>

                    <div class="form-group">
                        <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                            @Html.LabelFor(m => m.TankId, new { @class = "control-label" })
                        </div>
                        <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                            <select id="ddlTank" name="TankId" class="form-control" disabled onclick="GetsSensorByTankId(this.value, 'ddlSensor', '/SensorGroup/GetsSensorByTankId');">
                                <option value="">-- Please select a Tank --</option>
                            </select>
                            @Html.ValidationMessageFor(m => m.TankId, "", new { @class = "text-danger" })
                        </div>
                    </div>
            }
            else
            {
                @Html.HiddenFor(m => m.SiteId)

                <div class="form-group">
                    <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                        @Html.LabelFor(m => m.TankId, new { @class = "control-label" })
                    </div>
                    <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                        @Html.DropDownListFor(model => model.TankId, new SelectList(ViewBag.Tanks, "Id", "Name"), "-- Please select a Tank --", new { @class = "form-control selectpicker", id = "ddlTank", onclick = "GetsSensorByTankId(this.value, 'SensorId', '/SensorGroup/GetsSensorByTankId');" })
                        @Html.ValidationMessageFor(m => m.TankId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                    @Html.LabelFor(m => m.SensorId, new { @class = "control-label" })
                </div>
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                    <select id="SensorId" name="SensorId" class="form-control selectpicker" data-val="true" data-val-required="The Sensor field is required." disabled>
                        <option value="">-- Please select a Sensor --</option>
                    </select>
                    @Html.ValidationMessageFor(m => m.SensorId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                    @Html.LabelFor(m => m.Weight, new { @class = "control-label" })
                </div>
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 col-xl-10">
                    @Html.EditorFor(m => m.Weight, new { htmlAttributes = new { @class = "form-control", id = "txtWeight" } })
                    @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xl-6">

        </div>
    </div>

        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center btn-submit">
            <input type="submit" class="btn btn-default" value="ADD">
        </div>

        @Html.Grid(Model.Sensors).Columns(columns =>
{
    if (!this.IsSite())
    {
        columns.Add(c => c.SiteName).Titled("Site")
          .Filterable(true);
    }

    columns.Add(c => c.TankName).Titled("Tank")
         .Filterable(true);

    columns.Add(c => c.SensorName).Titled("Sensor")
         .Filterable(true);

    columns.Add(c => c.Weight).Titled("Weight")
         .Filterable(true);

    columns.Add()
     .Encoded(false)
     .Sanitized(false)
     .SetWidth(30)
     .RenderValueAs(o => @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Delete", "DeleteSensor", "SensorGroup", routeValues: new { id = o.Id, area = "Customer" }, htmlAttributes: new { data_modal = "", @class = "btn btn-default", onclick = "return confirm('Are you sure you wish to delete this registry?');" }));

}).WithPaging(10).Sortable(true).Filterable().WithMultipleFilters()

}

<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center btn-submit">
    <a class="btn" href="/Customer/SensorGroup/">Back</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/grid")
    <script src="~/Scripts/app/sensorgroup.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
